<?xml version="1.0" ?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">


<web-app>

	<!--used to autowire dependencies -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:fstxtime-config-main.xml,classpath:applicationContext.xml</param-value>
	</context-param>
	
    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
    </filter>

	<filter>
		<filter-name>container</filter-name>
		<filter-class>com.opensymphony.webwork.lifecycle.RequestLifecycleFilter</filter-class>
	</filter>

    <filter>
        <filter-name>systemHealthMonitorFilter</filter-name>
        <filter-class>com.fivesticks.time.system.SystemHealthMonitorFilter</filter-class>
    </filter>


    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>*.action</url-pattern>
    </filter-mapping>

	<filter-mapping>
		<filter-name>systemHealthMonitorFilter</filter-name>
		<url-pattern>*.action</url-pattern>
	</filter-mapping>

	<listener>
	    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<listener>
		<listener-class>com.opensymphony.webwork.lifecycle.ApplicationLifecycleListener</listener-class>
	</listener>

	<listener>
		<listener-class>com.opensymphony.webwork.lifecycle.SessionLifecycleListener</listener-class>
	</listener>

	<listener>
		<listener-class>com.fivesticks.time.system.ValidatingContextListener</listener-class>
	</listener>

	<servlet>
		<servlet-name>webwork</servlet-name>
		<servlet-class>com.opensymphony.webwork.dispatcher.ServletDispatcher</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>webwork</servlet-name> 
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>

	<!--
	Nick 2005.09.27 By sending ajax requests with an .ajax extension
	we can make webwork handle it, while sitemesh ignores it. 
	-->
	<servlet-mapping>
		<servlet-name>webwork</servlet-name> 
		<url-pattern>*.ajax</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>webwork</servlet-name> 
		<url-pattern>*.json</url-pattern>
	</servlet-mapping>	
	<!--
	Reid 2005.12.01
	-->
	<servlet-mapping>
		<servlet-name>webwork</servlet-name> 
		<url-pattern>*.rest</url-pattern>
	</servlet-mapping>


	<servlet-mapping>
		<servlet-name>webwork</servlet-name> 
		<url-pattern>*.jxml</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>webwork</servlet-name> 
		<url-pattern>*.xls</url-pattern>
	</servlet-mapping>	
	
	<servlet-mapping>
		<servlet-name>webwork</servlet-name> 
		<url-pattern>*.m</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>webwork</servlet-name> 
		<url-pattern>*.rss</url-pattern>
	</servlet-mapping>

	<session-config>
  		<session-timeout>600</session-timeout>
	</session-config>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

    <taglib>
        <taglib-uri>webwork</taglib-uri>
        <taglib-location>/WEB-INF/webwork.tld</taglib-location>
    </taglib>
    
    <taglib>
        <taglib-uri>fstxtime</taglib-uri>
        <taglib-location>/WEB-INF/tlds/fstxtime.tld</taglib-location>
    </taglib>    

	<error-page>
		<error-code>500</error-code>
		<location>/miscerror.jsp</location>
	</error-page>
	
	<error-page>
		<error-code>404</error-code>
		<location>/miscerror.jsp</location>
	</error-page>	
	
	<error-page>
		<error-code>403</error-code>
		<location>/miscerror.jsp</location>
	</error-page>		
</web-app>
